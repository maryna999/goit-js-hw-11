{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = \"44900645-90bb6bb627b06b4b3923afb1e\";\n\nexport async function fetchImages(query) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network error.');\n    }\n    const data = await response.json();\n    return data.hits;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return [];\n  }\n}","export function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = images.map(image => `\n    <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n      <div class=\"info\">\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n      </div>\n    </a>\n  `).join('');\n\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n\n  lightbox.refresh();\n}\n\n\n","import { fetchImages } from './js/pixabay-api.js';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { renderGallery } from './js/render-functions.js';\nimport SimpleLightbox from \"simplelightbox\";\n\n\nconst form = document.querySelector('#search-form');\nconst input = document.querySelector('#search-input');\nconst loader = document.querySelector('.loader');\nconst gallery = document.querySelector('.gallery');\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  const query = input.value.trim();\n\n  if (query === '') {\n    iziToast.error({\n      title: 'Error',\n      message: 'Search query cannot be empty',\n    });\n    return;\n  }\n\n  loader.style.display = 'block';\n  gallery.innerHTML = '';\n\n  const images = await fetchImages(query);\n  loader.style.display = 'none';\n\n  if (images.length === 0) {\n    iziToast.warning({\n      title: 'No Results',\n      message: 'Sorry, there are no images matching your search query. Please try again!',\n    });\n  } else {\n    renderGallery(images);\n  }\n});\n"],"names":["API_KEY","fetchImages","query","url","response","error","renderGallery","images","gallery","image","form","input","loader","event","iziToast"],"mappings":"ivBAAA,MAAMA,EAAU,qCAET,eAAeC,EAAYC,EAAO,CACvC,MAAMC,EAAM,gCAAgCH,CAAO,MAAME,CAAK,2DAE9D,GAAI,CACF,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,gBAAgB,EAGlC,OADa,MAAMA,EAAS,QAChB,IACb,OAAQC,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACR,CACH,CChBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EAAO,IAAIE,GAAS;AAAA,eAC3BA,EAAM,aAAa;AAAA,kBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oBAEpCA,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA;AAAA;AAAA,GAGpC,EAAE,KAAK,EAAE,EAEO,IAAI,eAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAClB,CAAG,EAEQ,QAAO,CAClB,CCbA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,eAAe,EAC9CC,EAAS,SAAS,cAAc,SAAS,EACzCJ,EAAU,SAAS,cAAc,UAAU,EAEjDE,EAAK,iBAAiB,SAAU,MAAOG,GAAU,CAC/CA,EAAM,eAAc,EACpB,MAAMX,EAAQS,EAAM,MAAM,KAAI,EAE9B,GAAIT,IAAU,GAAI,CAChBY,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDF,EAAO,MAAM,QAAU,QACvBJ,EAAQ,UAAY,GAEpB,MAAMD,EAAS,MAAMN,EAAYC,CAAK,EACtCU,EAAO,MAAM,QAAU,OAEnBL,EAAO,SAAW,EACpBO,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,0EACf,CAAK,EAEDR,EAAcC,CAAM,CAExB,CAAC"}